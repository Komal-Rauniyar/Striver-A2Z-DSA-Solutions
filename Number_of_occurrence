def firstoccurrence(arr,n,x):
    low=0
    high=n-1
    first=-1
    while(low<=high):
        mid=(low+high)//2
        if arr[mid]==x:
            first=mid
            high=mid-1
        elif arr[mid]<x:
            low=mid+1
        else:
            high=mid-1
    return first
def lastoccurrence(arr,n,x):
    low=0
    high=n-1
    last=-1
    while(low<=high):
        mid=(low+high)//2
        if arr[mid]==x:
            last=mid
            low=mid+1
        elif arr[mid]<x:
            low=mid+1
        else:
            high=mid-1
    return last
def firstandlastposition(arr,n,x):
    first=firstoccurrence(arr,n,x)
    if first==-1:
        return (-1,-1)
    last=lastoccurrence(arr,n,x)
    return (first,last)
def count(arr: [int], n: int, x: int) -> int:
    # Your code goes here
    first,last=firstandlastposition(arr,n,x)
    if first==-1:
        return 0
    return last-first+1
